{"version":3,"sources":["components/WelcomePage/index.js","components/NewRecordPage/index.js","components/ListPage/index.js","App.js","serviceWorker.js","index.js"],"names":["WelcomePage","react_default","a","createElement","style","textAlign","NewRecordPage","props","modelOpened","onDeleteClick","onSaveClick","onRenewClick","Form","Group","display","Field","Input","placeholder","id","value","formData","ad","onChange","onFormDataChanged","soyad","TextArea","adres","Button","floated","primary","onClick","color","textAlingCenter","ListPage","tableData","onIconClick","loading","Dimmer","active","Loader","Table","celled","Header","Row","HeaderCell","width","Body","map","tableItem","key","Cell","Icon","name","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activeItem","windowFormData","confirmOpened","field","event","assertThisInitialized","setState","setConfirmWindowOpened","self","axios","post","then","response","data","success","message","dto","notifySuccess","notifyFailure","catch","error","console","log","handleItemClick","e","_ref","sendListRequest","get","list","toast","position","POSITION","TOP_RIGHT","autoClose","setModelOpened","filteredItems","filter","tableDataItem","length","filterdItem","onConfirmCancel","onConfirmed","bind","document","title","opened","_this2","_this$state","welcomPage","newRecord","listing","react_toastify_esm","Grid","Column","Menu","fluid","vertical","tabular","Item","stretched","Segment","components_WelcomePage","components_NewRecordPage","components_ListPage","Modal","onClose","onOpen","open","Content","Confirm","content","cancelButton","confirmButton","onCancel","onConfirm","Component","Boolean","window","location","hostname","match","styleLink","rel","href","head","appendChild","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.219989c7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst WelcomePage = () => {\r\n\r\n    return (<div style={{textAlign: 'center'}}>\r\n        Bilgi Giriş Uygulamasına Hoş Geldiniz\r\n    </div>)\r\n}\r\n\r\nexport default WelcomePage","import React from 'react';\r\nimport {Form, Input, Button, TextArea} from 'semantic-ui-react';\r\n\r\n\r\nconst NewRecordPage = (props) => {\r\n\r\n    const {modelOpened, onDeleteClick, onSaveClick, onRenewClick} = props;\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Form >\r\n                <Form.Group  style={{display: 'none'}}>\r\n                    <Form.Field>\r\n                        <Input\r\n                            placeholder={'id'}\r\n                            id=\"id\"\r\n                            value={props.formData.id}\r\n                            // onChange={props.onFormDataChanged}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <Input\r\n                            placeholder={'Ad Bilgisi giriniz'}\r\n                            id=\"ad\"\r\n                            value={props.formData.ad}\r\n                            onChange={props.onFormDataChanged}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <Input\r\n                            placeholder={'Soyad Bilgisi giriniz'}\r\n                            id=\"soyad\"\r\n                            value={props.formData.soyad}\r\n                            onChange={props.onFormDataChanged}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <TextArea\r\n                            placeholder={'Adres Bilgisi giriniz'}\r\n                            id=\"adres\"\r\n                            value={props.formData.adres}\r\n                            onChange={props.onFormDataChanged}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n            </Form>\r\n            <Button floated='right' primary onClick={onSaveClick} >Kaydet</Button>\r\n            {modelOpened && (<Button color='red' floated='right' onClick={onDeleteClick} >Sil</Button>)}\r\n            {!modelOpened && (<Button floated='right' onClick={onRenewClick} >Yenile</Button>)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewRecordPage;","import React from 'react'\r\nimport { Icon, Dimmer, Loader,  Menu, Table } from 'semantic-ui-react'\r\n\r\nconst textAlingCenter = {textAlign: 'center'};\r\n\r\nconst ListPage = (props) => {\r\n\r\n    const { tableData, onIconClick, loading } = props;\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Dimmer active={loading}>\r\n                <Loader>Yükleniyor</Loader>\r\n            </Dimmer>\r\n\r\n            <Table celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell width={5} style={textAlingCenter}>Ad</Table.HeaderCell>\r\n                        <Table.HeaderCell width={5} style={textAlingCenter}>Soyad</Table.HeaderCell>\r\n                        <Table.HeaderCell width={10} style={textAlingCenter}>Adres</Table.HeaderCell>\r\n                        <Table.HeaderCell width={2} style={textAlingCenter}>İşlem</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    {tableData.map((tableItem) => {\r\n                        return (\r\n                            <Table.Row celled key={tableItem.id}>\r\n                                <Table.Cell style={textAlingCenter}>{tableItem.ad}</Table.Cell>\r\n                                <Table.Cell style={textAlingCenter}>{tableItem.soyad}</Table.Cell>\r\n                                <Table.Cell style={textAlingCenter}>{tableItem.adres}</Table.Cell>\r\n                                <Table.Cell style={textAlingCenter}>\r\n                                    <Icon name='pencil' id={tableItem.id} onClick={onIconClick}/>\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        )\r\n                    })}\r\n                </Table.Body>\r\n            </Table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListPage;","import React, {Component} from 'react';\nimport './App.css';\nimport {Grid, Menu, Segment, Modal, Confirm} from 'semantic-ui-react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport WelcomePage from \"./components/WelcomePage\";\nimport NewRecordPage from \"./components/NewRecordPage\";\nimport ListPage from \"./components/ListPage\";\n\nclass App extends Component {\n\n    state = {\n        modelOpened: false,\n        activeItem: 'Giriş',\n        formData: {\n            id: null,\n            ad: '',\n            soyad: '',\n            adres: '',\n        },\n        windowFormData: {\n            id: null,\n            ad: '',\n            soyad: '',\n            adres: '',\n        },\n        tableData:[],\n        loading: false,\n        confirmOpened: false,\n    }\n\n    constructor(){\n        super();\n        this.onFormDataChanged = this.onFormDataChanged.bind(this);\n\n        document.title = 'Task Page';\n    }\n\n    onFormDataChanged = (field, event) =>  {\n\n        const { state } = this;\n        const { modelOpened } = state;\n        if(!modelOpened){\n            const { id, value } = event\n            const formData = this.state.formData;\n            formData[id] = value;\n            this.setState(formData);\n        }else{\n            const { id, value } = event\n            const windowFormData = this.state.windowFormData;\n            windowFormData[id] = value;\n            this.setState(windowFormData);\n        }\n\n    }\n\n    onDeleteClick = () => {\n        this.setConfirmWindowOpened(true);\n    }\n\n    onRenewClick = () => {\n        this.setState({\n            formData: {\n                id: null,\n                ad: '',\n                soyad: '',\n                adres: '',\n            }\n        })\n    }\n\n    onSaveClick = () => {\n\n        const { state } = this;\n        const { modelOpened } = state;\n\n        const formData = !modelOpened ? this.state.formData : this.state.windowFormData;\n        var self = this;\n        axios.post('/formData/save', formData)\n            .then(function (response) {\n                const { data } = response;\n                const { success, message, dto } = data;\n                if(success === true){\n                    self.notifySuccess(message);\n                    if(modelOpened){\n                        self.setState({\n                            windowFormData: dto\n                        });\n                    }else{\n                        self.setState({\n                            formData: dto\n                        });\n                    }\n                }else{\n                    self.notifyFailure(message);\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n                self.notifyFailure(\"Hata Durum oluşmuştur. Lütfen Sistem Yöneticiniz ile görüşünüz\");\n            });\n    };\n\n\n    handleItemClick = (e, { name }) => {\n        if(name === 'Listeleme'){\n            this.sendListRequest();\n        }\n        this.setState({ activeItem: name })\n    };\n\n    sendListRequest = () => {\n        var self = this;\n        const url = '/formData/getAll';\n        this.setState({loading: true})\n        axios.get(url)\n            .then(function (response) {\n                const { data } = response;\n                const { success, message, list } = data;\n                if(success === true){\n                    self.notifySuccess(message);\n                    self.setState({\n                        tableData: list,\n                        loading:false\n                    });\n                }else{\n                    self.notifyFailure(message);\n                    self.setState({\n                        loading:false\n                    });\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n                self.setState({\n                    tableData: [{id: 1, ad: 'adi', soyad: 'soyad', adres: 'adres'}, {id: 2, ad: 'adi', soyad: 'soyad', adres: 'adres'}],\n                    loading:false\n                });\n            })\n    }\n\n    notifySuccess = (message) => {\n        toast.success(message, {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 5000,\n        });\n    }\n\n    notifyFailure = (message)  =>{\n        toast.error(message, {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 5000,\n        });\n    }\n\n    setModelOpened = (modelOpened) => {\n        this.setState({\n            modelOpened\n        })\n    }\n\n    onIconClick = (event, field) => {\n        const {id} = field;\n        const {tableData} = this.state;\n\n        const filteredItems = tableData.filter(tableDataItem => {\n            return tableDataItem.id === id\n        });\n        if(filteredItems.length > 0){\n            const filterdItem = filteredItems[0];\n            this.setState({\n                modelOpened: true,\n                windowFormData: filterdItem\n            })\n        }else {\n            this.notifyFailure(id + \" numaralı kayıt liste içinde bulunamıştır\");\n        }\n    }\n\n    onConfirmCancel = () => {\n        this.setConfirmWindowOpened(false);\n    }\n\n    setConfirmWindowOpened(opened) {\n        this.setState({\n            confirmOpened: opened\n        })\n    }\n\n    onConfirmed = () => {\n        const { state } = this;\n        const { modelOpened } = state;\n\n        if(modelOpened){\n            const windowFormData = this.state.windowFormData;\n\n            var self = this;\n            axios.post('/formData/delete', windowFormData)\n                .then(function (response) {\n                    const { data } = response;\n                    const { success, message } = data;\n                    if(success === true){\n                        self.notifySuccess(message);\n                        self.setModelOpened(false);\n                        self.sendListRequest();\n                        self.setConfirmWindowOpened(false);\n\n                    }else{\n                        self.notifyFailure(message);\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error);\n                    self.notifyFailure(\"Hata Durum oluşmuştur. Lütfen Sistem Yöneticiniz ile görüşünüz\");\n                });\n        }\n    }\n\n    render() {\n        const { activeItem, formData, tableData, modelOpened, windowFormData, loading, confirmOpened } = this.state\n        const welcomPage = activeItem === 'Giriş';\n        const newRecord = activeItem === 'Yeni Kayıt';\n        const listing = activeItem === 'Listeleme';\n\n        return (\n            <div>\n                <ToastContainer />\n                <Grid>\n                    <Grid.Column width={3}>\n                        <Menu fluid vertical tabular>\n                            <Menu.Item\n                                name='Giriş'\n                                active={welcomPage}\n                                onClick={this.handleItemClick}\n                            />\n                            <Menu.Item\n                                name='Yeni Kayıt'\n                                active={newRecord}\n                                onClick={this.handleItemClick}\n                            />\n                            <Menu.Item\n                                name='Listeleme'\n                                active={listing}\n                                onClick={this.handleItemClick}\n                            />\n                        </Menu>\n                    </Grid.Column>\n\n                    <Grid.Column stretched width={12}>\n                        <Segment>\n                            {welcomPage && (<WelcomePage/>)}\n                            {newRecord && (<NewRecordPage formData={formData} onFormDataChanged={this.onFormDataChanged} onSaveClick={this.onSaveClick} modelOpened={modelOpened} onRenewClick={this.onRenewClick}/>)}\n                            {listing && (<ListPage tableData={tableData} onIconClick={this.onIconClick} loading={loading}/>)}\n                        </Segment>\n                    </Grid.Column>\n                </Grid>\n\n                <Modal\n                    onClose={() => this.setModelOpened(false)}\n                    onOpen={() => this.setModelOpened(true)}\n                    open={modelOpened}\n                >\n                    <Modal.Content>\n                        <NewRecordPage formData={windowFormData} onFormDataChanged={this.onFormDataChanged} onSaveClick={this.onSaveClick} onDeleteClick={this.onDeleteClick} modelOpened={modelOpened}/>\n                    </Modal.Content>\n                </Modal>\n                <Confirm\n                    open={confirmOpened}\n                    content='Silme işlemi gerçekleştirilecektir. Onaylıyor musunuz?'\n                    cancelButton='İptal Et'\n                    confirmButton=\"Onayla\"\n                    onCancel={this.onConfirmCancel}\n                    onConfirm={this.onConfirmed}\n                />\n\n            </div>\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}